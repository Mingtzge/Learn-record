介绍

tmux是一个优秀的终端复用软件，即使非正常掉线，也能保证当前的任务运行，这一点对于远程SSH访问特别有用，网络不好的情况下仍然能保证工作现场不丢失(使用tmux attach既可以回到上次操作之后的状态)!此外，tmux完全使用键盘控制窗口，实现窗口的切换功能。

简单地说，tmux对于我主要有两个功能（这应该也是tmux的主要功能）:

    split窗口。可以在一个terminal下打开多个终端，也可以对当前屏幕进行各种split，即可以 同时打开多个显示范围更小的终端。

    在使用SSH的环境下，避免网络不稳定，导致工作现场的丢失。想象以下场景， 你在执行一条命令的过程中，由于网络不稳定，SSH连接断开了。这个时候，你就不知道之前 的那条命令是否执行成功。如果此时你打开了很多文件，进入了较深层次的目录，由于网络 不稳定，SSH连接断开。重新连接以后，你又不得不重新打开那些文件，进入那个深层次的 目录。如果使用了tmux，重新连接以后，就可以直接回到原来的工作环境，不但提高了工作 效率，还降低了风险，增加了安全性。


1、分割pane
prefisx:ctrl+b(控制命令标志)
prefix+":横向切
prefix+%：纵向切
prefix + z : 把当前一个pane放大（zoom in),再按一次就恢复原位
prefix + 上下左右的箭头 ：在pane之间switch
2、windows
prefix + c : 创建一个新的window。
prefix + 数字1，2，3 : 因为能看到不同window的数字编号，所以直接输入想去的window的数字编号即可
refix + & ： 关闭当前window
prefix + , (逗号）：更改window名称。
3、session：
5 Session

查看所有的session（在terminal输入）

    tmux ls : 这个命令是在terminal里输入的。当前正常运作中的tmux server会显示（attached）。没有的话就是已关闭，tmux server在后台运行。

更名session（tmux状态下输入）

    prefix + $ : 更名后好让自己知道每一个session是用来做什么的。通常一个session对应一个project

创建session的时候直接命名(在terminal输入）

    tmux new -s py35 : 新建一个名为py35的session

断开一个session(detached) （tmux状态下输入）

    prefix + d ：退出session。在只有一个window的状态下，直接输入exit也能退出

重新连接某一个session wich name（在terminal输入）

    tmux a -t py35 : 重新连接py35 session。这里的a是attach的意思

偷懒连接上一个session（在terminal输入）

    tmux a : 如果只有一个session的话，这个是最快的连接方法

删除session（在terminal输入）

    tmux kill-session -a -t py35 : 删除除了py35以外的所有session


4、配置

注意：让配置生效，要在tmux的命令行中执行source-file ～/.tmux.conf.进入命令行的方式prefix（切换入tmux控制的组合键、原始是ctrl+b）+：

详见：https://www.cnblogs.com/chjbbs/p/5689011.html
